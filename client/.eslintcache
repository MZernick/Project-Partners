[{"/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/index.js":"1","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/App.js":"2","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/components/PortfolioContainer/index.js":"3","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/pages/Profile.js":"4","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/pages/MyTeams.js":"5","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/pages/JoinTeam.js":"6","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/pages/Home.js":"7","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/pages/Signup.js":"8","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/components/NavTabs/index.js":"9","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/utils/auth.js":"10","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/utils/mutations.js":"11","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/utils/queries.js":"12","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/components/TeamsList/index.js":"13"},{"size":172,"mtime":1677954763085,"results":"14","hashOfConfig":"15"},{"size":456,"mtime":1678155055230,"results":"16","hashOfConfig":"15"},{"size":1328,"mtime":1678157236547,"results":"17","hashOfConfig":"15"},{"size":1725,"mtime":1678157912139,"results":"18","hashOfConfig":"15"},{"size":1205,"mtime":1678157959312,"results":"19","hashOfConfig":"15"},{"size":148,"mtime":1677954763088,"results":"20","hashOfConfig":"15"},{"size":1715,"mtime":1678157940939,"results":"21","hashOfConfig":"15"},{"size":6673,"mtime":1678157912140,"results":"22","hashOfConfig":"15"},{"size":2055,"mtime":1678155055232,"results":"23","hashOfConfig":"15"},{"size":720,"mtime":1678157904187,"results":"24","hashOfConfig":"15"},{"size":744,"mtime":1678157912142,"results":"25","hashOfConfig":"15"},{"size":329,"mtime":1678157976529,"results":"26","hashOfConfig":"15"},{"size":1771,"mtime":1678155055239,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tpk92p",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/index.js",[],"/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/App.js",[],"/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/components/PortfolioContainer/index.js",[],"/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/pages/Profile.js",["60","61","62","63","64"],"import React from 'react';\n\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\n// import Pairings from '../components/Pairings';\n\n//profile query here- are we adding pairs/partners/favorites or just seeing partners in the their teamsview?\n// import { QUERY_SINGLE_PROFILE, QUERY_ME } from '../utils/queries';\n\n// import Auth from '../utils/auth';\n\nconst Profile = () => {\n  const { userId } = useParams();\n\n  // If there is no `userId` in the URL as a parameter, execute the `QUERY_ME` query instead for the logged in user's information\n  const { loading, data } = useQuery(\n    userId ? QUERY_SINGLE_PROFILE : QUERY_ME,\n    {\n      variables: { userId: userId },\n    }\n  );\n\n  // Check if data is returning from the `QUERY_ME` query, then the `QUERY_SINGLE_PROFILE` query\n  const user = data?.me || data?.user || {};\n\n  // Use React Router's `<Navigate />` component to redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data._id === userId) {\n    return <Navigate to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.name) {\n    return (\n      <h4>\n        You need to be logged in to see your profile page. Use the navigation\n        links above to sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"card-header\">\n        {userId ? `${user.username}'s` : 'Your'} \n      </h2>\n    <p>has a ${user.personality} type.</p>\n    <h4>You belong to ${user.teams.length} teams</h4>\n</div>\n  );\n};\n\nexport default Profile;\n\n{/* MIGHT ADD PAIRINGS TO PROFILE\n<div className=\"my-4 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\n<Pairings userId={user._id} />\n</div> */}\n","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/pages/MyTeams.js",["65","66","67","68"],"import React from \"react\";\n\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport TeamList from '../components/TeamsList';\n\nimport { QUERY_SINGLE_PROFILE, QUERY_ME } from '../utils/queries';\nimport Auth from '../utils/auth';\n\nconst MyTeam = () => {\n    const { userId } = useParams();\n\n    const { loading, data } = useQuery(\n      userId ? QUERY_SINGLE_PROFILE : QUERY_ME,\n      {\n        variables: { userId: userId },\n      }\n    );\n  \n    const profile = data?.me || data?.user || {};\n    if (Auth.loggedIn() && Auth.getProfile().data._id === userId) {\n        return <Navigate to=\"/me\" />;\n      }\n    \n      if (loading) {\n        return <div>Loading...</div>;\n      }\n    \n      if (!user?.name) {\n        return (\n          <h4>\n            You need to be logged in to see your teams page. Use the navigation\n            links above to sign up or log in!\n          </h4>\n        );\n      }\n    return (\n        <div>\n            <h1>MyTeams:</h1>\n            {user.teams?.length > 0 && (\n        <TeamList\n          teams={user.teams}\n          isLoggedInUser={!userId && true}\n        />\n      )}\n        </div>\n    )\n}\n\nexport default MyTeam;","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/pages/JoinTeam.js",[],"/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/pages/Home.js",["69","70","71","72","73","74","75","76","77"],"import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport '../styles/Home.css';\nimport Hiwtest from '../styles/howitworksmock1.png';\n\nexport default function Homepage(props) {\n  return (    \n<div class=\"main-container\">\n  <div id=\"menu\">\n    <div id=\"menu-items\">\n      <div class=\"menu-item\" id='big-title'>ProPairs</div>\n      {/* In the future, I'd like to make a ProPairs logo and just put it where ProPairs is right now. */}\n      <div class=\"menu-item\">How it Works</div>\n      <div class=\"menu-item\">Our Team</div>\n      <div class=\"menu-item\">Get Started</div>\n    </div>\n    <div class=\"descriptionContainer\">\n    <h2 id=\"description1\">Group cohesion is everything in projects. We get it. ProPairs evaluates users based on their personality type and generates a rating of how well they will work with one another. The website aims to help users find compatible project partners based on their personality traits.</h2>\n  </div>\n  <div class=\"container\">\n    <a href=\"#\">Menu </a>\n    <a href=\"#\">pages </a>\n    <a href=\"#\">study</a>\n    <a href=\"#\">contact </a>\n  </div>\n    <div id=\"menu-background-image\"></div>\n  </div>\t\n\n</div>\n);\n}\n\n//         <div class=\"descriptionContainer\">\n//         <h2>\n//             Group cohesion is everything in projects. We get it. ProPairs evaluates users based on their personality type and generates a rating of how well they will work with one another. The website aims to help users find compatible project partners based on their personality traits.\n//         </h2>\n//         </div>\n","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/pages/Signup.js",["78","79"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [signupState, setSignupState] = useState({\n    name: '',\n    email: '',\n    password: '',\n    personality: '',\n  });\n\nconst [addUser, { error1, data1 }] = useMutation(ADD_USER);\nconst [userState, setUserState] = useState({ email: '', password: '' });\nconst [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setSignupState({\n      ...signupState,\n      [name]: value,\n    });\n  };\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    console.log(userState);\n    try {\n      const { data } = await login({\n        variables: { ...userState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setUserState({\n      email: '',\n      password: '',\n    });\n  };\n\n  // submit form\n  const handleSignup = async (event) => {\n    event.preventDefault();\n    console.log(signupState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...signupState },\n      });\n\n    //   Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data1 ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form>\n              <label for=\"username\"> Enter Username:</label>\n                <input\n                  id=\"username\"\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={signupState.name}\n                  onChange={handleChange}\n                />\n                <label for=\"email\"> Enter Email:</label>\n                <input\n                  id=\"email\"\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={signupState.email}\n                  onChange={handleChange}\n                />\n                <label for=\"password\">Enter Password:</label>\n                <input\n                  id=\"password\"\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={signupState.password}\n                  onChange={handleChange}\n                />\n                <label for=\"personality-type\">Input your Myers-Briggs Personality Type Here:</label>\n                <select\n                  id=\"personality-type\"\n                  className=\"form-input\"\n                  placeholder=\"Pick Personality Type\"\n                  name=\"personality\"\n                  onChange={handleChange}\n                >\n                <option value={signupState.personality}>INTJ</option>\n                <option value={signupState.personality}>INTP</option>\n                <option value={signupState.personality}>ENTJ</option>\n                <option value={signupState.personality}>ENTP</option>\n                <option value={signupState.personality}>INFJ</option>\n                <option value={signupState.personality}>INFP</option>\n                <option value={signupState.personality}>ENFJ</option>\n                <option value={signupState.personality}>ENFP</option>\n                <option value={signupState.personality}>ISTJ</option>\n                <option value={signupState.personality}>ISFJ</option>\n                <option value={signupState.personality}>ESTJ</option>\n                <option value={signupState.personality}>ESFJ</option>\n                <option value={signupState.personality}>ISTP</option>\n                <option value={signupState.personality}>ISFP</option>\n                <option value={signupState.personality}>ESTP</option>\n                <option value={signupState.personality}>ESFP</option> \n                </select>\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n                <p>Don't know your personality type? Take this quick quiz: <a rel=\"noreferrer\" href=\"https://www.16personalities.com/free-personality-test\" target=\"_blank\">16personalites.com</a></p>\n              </form>\n            )}\n\n            {error1 && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error1.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleLogin}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={userState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={userState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n\n","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/components/NavTabs/index.js",[],"/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/utils/auth.js",["80"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/utils/mutations.js",[],"/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/utils/queries.js",[],"/Users/dominiquenix/Desktop/ut-bootcamp/projects/Project-Partners/client/src/components/TeamsList/index.js",["81"],"import React from 'react';\nimport { useMutation } from '@apollo/client';\n//be sure to create the mutations for this--done\nimport { REMOVE_TEAM } from '../../utils/mutations';\n\n//be sure to create the query for this--done\nimport { QUERY_ME } from '../../utils/queries';\n\nconst TeamList = ({ teams, isLoggedInUser = false }) => {\n  const [removeTeam, { error }] = useMutation(REMOVE_TEAM, {\n    update(cache, { data: { removeTeam } }) {\n      try {\n        cache.writeQuery({\n          query: QUERY_ME,\n          data: { me: removeTeam },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleRemoveTeam = async (team) => {\n    try {\n      const { data } = await removeTeam({\n        variables: { team },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (!teams.length) {\n    return <h3>No Teams Yet</h3>;\n  }\n\n  return (\n    <div>\n      <div className=\"flex-row justify-space-between my-4\">\n        {teams &&\n          teams.map((team) => (\n            <div key={team} className=\"col-12 col-xl-6\">\n              <div className=\"card mb-3\">\n                <h4 className=\"card-header bg-dark text-light p-2 m-0 display-flex align-center\">\n                  <span>{team.title}</span>\n                  {isLoggedInUser && (\n                    <button\n                      className=\"btn btn-sm btn-danger ml-auto\"\n                      onClick={() => handleRemoveTeam(team)}\n                    >\n                      X\n                    </button>\n                  )}\n                </h4>\n              </div>\n            </div>\n          ))}\n      </div>\n      {error && (\n        <div className=\"my-3 p-3 bg-danger text-white\">{error.message}</div>\n      )}\n    </div>\n  );\n};\n\nexport default TeamList;",{"ruleId":"82","severity":2,"message":"83","line":18,"column":14,"nodeType":"84","messageId":"85","endLine":18,"endColumn":34},{"ruleId":"82","severity":2,"message":"86","line":18,"column":37,"nodeType":"84","messageId":"85","endLine":18,"endColumn":45},{"ruleId":"82","severity":2,"message":"87","line":28,"column":7,"nodeType":"84","messageId":"85","endLine":28,"endColumn":11},{"ruleId":"82","severity":2,"message":"87","line":28,"column":26,"nodeType":"84","messageId":"85","endLine":28,"endColumn":30},{"ruleId":"88","severity":1,"message":"89","line":58,"column":1,"nodeType":"90","messageId":"91","endLine":61,"endColumn":11},{"ruleId":"92","severity":1,"message":"93","line":21,"column":11,"nodeType":"84","messageId":"94","endLine":21,"endColumn":18},{"ruleId":"82","severity":2,"message":"95","line":30,"column":12,"nodeType":"84","messageId":"85","endLine":30,"endColumn":16},{"ruleId":"82","severity":2,"message":"95","line":41,"column":14,"nodeType":"84","messageId":"85","endLine":41,"endColumn":18},{"ruleId":"82","severity":2,"message":"95","line":43,"column":18,"nodeType":"84","messageId":"85","endLine":43,"endColumn":22},{"ruleId":"92","severity":1,"message":"96","line":2,"column":8,"nodeType":"84","messageId":"94","endLine":2,"endColumn":12},{"ruleId":"92","severity":1,"message":"97","line":3,"column":8,"nodeType":"84","messageId":"94","endLine":3,"endColumn":16},{"ruleId":"92","severity":1,"message":"98","line":4,"column":8,"nodeType":"84","messageId":"94","endLine":4,"endColumn":22},{"ruleId":"92","severity":1,"message":"99","line":5,"column":8,"nodeType":"84","messageId":"94","endLine":5,"endColumn":18},{"ruleId":"92","severity":1,"message":"100","line":7,"column":8,"nodeType":"84","messageId":"94","endLine":7,"endColumn":15},{"ruleId":"101","severity":1,"message":"102","line":24,"column":5,"nodeType":"103","endLine":24,"endColumn":17},{"ruleId":"101","severity":1,"message":"102","line":25,"column":5,"nodeType":"103","endLine":25,"endColumn":17},{"ruleId":"101","severity":1,"message":"102","line":26,"column":5,"nodeType":"103","endLine":26,"endColumn":17},{"ruleId":"101","severity":1,"message":"102","line":27,"column":5,"nodeType":"103","endLine":27,"endColumn":17},{"ruleId":"92","severity":1,"message":"104","line":53,"column":9,"nodeType":"84","messageId":"94","endLine":53,"endColumn":21},{"ruleId":"92","severity":1,"message":"105","line":58,"column":15,"nodeType":"84","messageId":"94","endLine":58,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":37,"column":1,"nodeType":"108","endLine":37,"endColumn":34},{"ruleId":"92","severity":1,"message":"105","line":25,"column":15,"nodeType":"84","messageId":"94","endLine":25,"endColumn":19},"no-undef","'QUERY_SINGLE_PROFILE' is not defined.","Identifier","undef","'QUERY_ME' is not defined.","'Auth' is not defined.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'profile' is assigned a value but never used.","unusedVar","'user' is not defined.","'Form' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'InputGroup' is defined but never used.","'Hiwtest' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'handleSignup' is assigned a value but never used.","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration"]