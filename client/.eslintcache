[{"C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\index.js":"1","C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\App.js":"2","C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\components\\PortfolioContainer\\index.js":"3","C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\pages\\Profile.js":"4","C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\pages\\JoinTeam.js":"5","C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\pages\\MyTeams.js":"6","C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\pages\\Home.js":"7","C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\pages\\Signup.js":"8","C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\components\\NavTabs\\index.js":"9"},{"size":172,"mtime":1678156586074,"results":"10","hashOfConfig":"11"},{"size":456,"mtime":1678156586065,"results":"12","hashOfConfig":"11"},{"size":1328,"mtime":1678156586067,"results":"13","hashOfConfig":"11"},{"size":1716,"mtime":1678156586077,"results":"14","hashOfConfig":"11"},{"size":148,"mtime":1678156586075,"results":"15","hashOfConfig":"11"},{"size":1167,"mtime":1678156586076,"results":"16","hashOfConfig":"11"},{"size":1719,"mtime":1678156586075,"results":"17","hashOfConfig":"11"},{"size":7322,"mtime":1678156586077,"results":"18","hashOfConfig":"11"},{"size":2055,"mtime":1678156586066,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lfmm1q",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":7,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\index.js",[],"C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\App.js",[],"C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\components\\PortfolioContainer\\index.js",[],"C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\pages\\Profile.js",["41","42"],"import React from 'react';\n\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Pairings from '../components/Pairings';\n\n//profile query here- are we adding pairs/partners/favorites or just seeing partners in the their teamsview?\nimport { QUERY_SINGLE_PROFILE, QUERY_ME } from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n  const { userId } = useParams();\n\n  // If there is no `userId` in the URL as a parameter, execute the `QUERY_ME` query instead for the logged in user's information\n  const { loading, data } = useQuery(\n    userId ? QUERY_SINGLE_PROFILE : QUERY_ME,\n    {\n      variables: { userId: userId },\n    }\n  );\n\n  // Check if data is returning from the `QUERY_ME` query, then the `QUERY_SINGLE_PROFILE` query\n  const user = data?.me || data?.user || {};\n\n  // Use React Router's `<Navigate />` component to redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data._id === userId) {\n    return <Navigate to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.name) {\n    return (\n      <h4>\n        You need to be logged in to see your profile page. Use the navigation\n        links above to sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"card-header\">\n        {userId ? `${user.username}'s` : 'Your'} \n      </h2>\n    <p>has a ${user.personality} type.</p>\n    <h4>You belong to ${user.teams.length} teams</h4>\n</div>\n  );\n};\n\nexport default Profile;\n\n{/* MIGHT ADD PAIRINGS TO PROFILE\n<div className=\"my-4 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\n<Pairings userId={user._id} />\n</div> */}\n","C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\pages\\JoinTeam.js",[],"C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\pages\\MyTeams.js",["43","44","45","46","47","48","49","50"],"import React from \"react\";\n\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport TeamList from '../components/TeamList';\n\nimport { QUERY_SINGLE_PROFILE, QUERY_ME } from '../utils/queries';\n\nfunction myTeam() {\n    const { userId } = useParams();\n\n    const { loading, data } = useQuery(\n      userId ? QUERY_SINGLE_PROFILE : QUERY_ME,\n      {\n        variables: { userId: userId },\n      }\n    );\n  \n    const profile = data?.me || data?.user || {};\n    if (Auth.loggedIn() && Auth.getProfile().data._id === userId) {\n        return <Navigate to=\"/me\" />;\n      }\n    \n      if (loading) {\n        return <div>Loading...</div>;\n      }\n    \n      if (!user?.name) {\n        return (\n          <h4>\n            You need to be logged in to see your teams page. Use the navigation\n            links above to sign up or log in!\n          </h4>\n        );\n      }\n    return (\n        <div>\n            <h1>MyTeams:</h1>\n            {user.teams?.length > 0 && (\n        <TeamList\n          teams={user.teams}\n          isLoggedInUser={!userId && true}\n        />\n      )}\n        </div>\n    )\n}\n\nexport default myTeam;","C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\pages\\Home.js",["51","52","53","54","55","56","57","58","59"],"import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport '../styles/hometest.css';\nimport Hiwtest from '../styles/howitworksmock1.png';\n\nexport default function Homepage(props) {\n  return (    \n<div class=\"main-container\">\n  <div id=\"menu\">\n    <div id=\"menu-items\">\n      <div class=\"menu-item\" id='big-title'>ProPairs</div>\n      {/* In the future, I'd like to make a ProPairs logo and just put it where ProPairs is right now. */}\n      <div class=\"menu-item\">How it Works</div>\n      <div class=\"menu-item\">Our Team</div>\n      <div class=\"menu-item\">Get Started</div>\n    </div>\n    <div class=\"descriptionContainer\">\n    <h2 id=\"description1\">Group cohesion is everything in projects. We get it. ProPairs evaluates users based on their personality type and generates a rating of how well they will work with one another. The website aims to help users find compatible project partners based on their personality traits.</h2>\n  </div>\n  <div class=\"container\">\n    <a href=\"#\">Menu </a>\n    <a href=\"#\">pages </a>\n    <a href=\"#\">study</a>\n    <a href=\"#\">contact </a>\n  </div>\n    <div id=\"menu-background-image\"></div>\n  </div>\t\n\n</div>\n);\n}\n\n//         <div class=\"descriptionContainer\">\n//         <h2>\n//             Group cohesion is everything in projects. We get it. ProPairs evaluates users based on their personality type and generates a rating of how well they will work with one another. The website aims to help users find compatible project partners based on their personality traits.\n//         </h2>\n//         </div>\n","C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\pages\\Signup.js",[],"C:\\Users\\anite\\Desktop\\bootcamp\\groupProjects\\Project-Partners\\client\\src\\components\\NavTabs\\index.js",[],{"ruleId":"60","severity":1,"message":"61","line":6,"column":8,"nodeType":"62","messageId":"63","endLine":6,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":58,"column":1,"nodeType":"66","messageId":"67","endLine":61,"endColumn":11},{"ruleId":"68","severity":2,"message":"69","line":11,"column":24,"nodeType":"62","endLine":11,"endColumn":33},{"ruleId":"68","severity":2,"message":"70","line":13,"column":31,"nodeType":"62","endLine":13,"endColumn":39},{"ruleId":"60","severity":1,"message":"71","line":20,"column":11,"nodeType":"62","messageId":"63","endLine":20,"endColumn":18},{"ruleId":"72","severity":2,"message":"73","line":21,"column":9,"nodeType":"62","messageId":"74","endLine":21,"endColumn":13},{"ruleId":"72","severity":2,"message":"73","line":21,"column":28,"nodeType":"62","messageId":"74","endLine":21,"endColumn":32},{"ruleId":"72","severity":2,"message":"75","line":29,"column":12,"nodeType":"62","messageId":"74","endLine":29,"endColumn":16},{"ruleId":"72","severity":2,"message":"75","line":40,"column":14,"nodeType":"62","messageId":"74","endLine":40,"endColumn":18},{"ruleId":"72","severity":2,"message":"75","line":42,"column":18,"nodeType":"62","messageId":"74","endLine":42,"endColumn":22},{"ruleId":"60","severity":1,"message":"76","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":12},{"ruleId":"60","severity":1,"message":"77","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":16},{"ruleId":"60","severity":1,"message":"78","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":22},{"ruleId":"60","severity":1,"message":"79","line":5,"column":8,"nodeType":"62","messageId":"63","endLine":5,"endColumn":18},{"ruleId":"60","severity":1,"message":"80","line":7,"column":8,"nodeType":"62","messageId":"63","endLine":7,"endColumn":15},{"ruleId":"81","severity":1,"message":"82","line":24,"column":5,"nodeType":"83","endLine":24,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":25,"column":5,"nodeType":"83","endLine":25,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":26,"column":5,"nodeType":"83","endLine":26,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":27,"column":5,"nodeType":"83","endLine":27,"endColumn":17},"no-unused-vars","'Pairings' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/rules-of-hooks","React Hook \"useParams\" is called in function \"myTeam\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useQuery\" is called in function \"myTeam\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","'profile' is assigned a value but never used.","no-undef","'Auth' is not defined.","undef","'user' is not defined.","'Form' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'InputGroup' is defined but never used.","'Hiwtest' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]